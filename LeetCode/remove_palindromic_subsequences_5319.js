/*
5319. Remove Palindromic Subsequences

Given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic

Return the minimum number of steps to make the given string empty.


A string is a subsequence of a given string, if it is generated by deleting some characters of a given string without changing its order.

A string is called palindrome if is one that reads the same backward as well as forward.

 

Example 1:

Input: s = "ababa"
Output: 1
Explanation: String is already palindrome
Example 2:

Input: s = "abb"
Output: 2
Explanation: "abb" -> "bb" -> "". 
Remove palindromic subsequence "a" then "bb".
Example 3:

Input: s = "baabb"
Output: 2
Explanation: "baabb" -> "b" -> "". 
Remove palindromic subsequence "baab" then "b".
Example 4:

Input: s = ""
Output: 0

Constraints:

0 <= s.length <= 1000
s only consists of letters 'a' and 'b'
*/

/*** solution  ***/

var removePalindromeSub = function(s) {
    let counter = 0
    let len = s.length
    if( len > 0){
        let testArray = [...(s.split(""))]
        if(s.split("").reverse().join("") === s){
            return 1
        }else{
            for(let i = 0; i < len; i++){
                let res = testArray.slice(i,1)
                let resArray = [...res]
                let val = resArray.join("")
                if(resArray.reverse().join("") == val){
                    counter+= 1
                    testArray.splice(0,res.length)
                    if(res.length == 0){
                        break
                    }
                }else{
                    counter = 0
                }
            }
        }
    }
    return counter
};
